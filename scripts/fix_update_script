############################################################################
#
# 版权所有 (c) 2010-2011 dsixda - 由华为饭网的饭吗汉化 bbs.huaweifan.com
#
# Android 厨房是一款ROM定制工具，它完全是免费的。 
# 理论上支持所有民间刷机包的定制，完美支持华为和HTC的所有民间和官方刷机包！ 
# 该脚本文件的目的是为个人和/或教育使用，不得将它用于任务商业用途。
# 
# 技术支持来自XDA和华为手机论坛，华为手机论坛网址是：bbs.huaweifan.com
#
############################################################################


cd WORKING_*

if [ ! -d system ]
then
  echo
  echo "错误: 没有找到 /system 文件夹！"
  cd ..
  exit 0
fi


if [ -e META-INF/com/google/android/update-script ]
then

  #
  # Check for symbolic links in /system/bin and add symlinks to update-script
  #

  # Don't go all the way into system/bin, because some of the binaries in
  # there may collide with your operating system's file operation commands
  # (e.g. ls, rm)!
  cd system

  echo
  echo "正在查找 /system/bin 下的符号链接 ..."
  
  symlinks=`find bin -type l -exec ls -l {} \; | sed 's/.* bin\/\([^ ]*\).*/\1/g'`
  source_files=`find bin -type l -exec ls -l {} \; | sed 's/.*-> //g'`

  symlinks=( $symlinks )
  source_files=( $source_files )

  #
  # Check if no symlinks found in ROM and update-script has no symlink entries
  #
  if [ "$symlinks" == "" ] && [ "`grep "symlink toolbox" ../META-INF/com/google/android/update-script`" == "" ]
  then

    echo "什么也没检测到"

    #
    # Build a set of default symlinks in update-script if none found in /system/bin
    #

    if [ "`grep "symlink toolbox" ../META-INF/com/google/android/update-script`" == ""  ] && [ -e bin/toolbox ]
    then
      echo -n "正在添加默认 toolbox 符号链接到 update-script 脚本 ..."

      cp ../../tools/update_files/default_symlinks .
      sed -i -e '/copy_dir PACKAGE:system SYSTEM:/r default_symlinks' ../META-INF/com/google/android/update-script
      rm default_symlinks

      file_list=`ls bin`

      # 
      # If binary already exists, then remove symlink in update-script
      #
      for curr_file in $file_list
      do
        echo -n "华为饭网huaweifan.com"
        check_line="symlink toolbox SYSTEM:bin\\/$curr_file"
        if [ `grep -c "$check_line" ../META-INF/com/google/android/update-script` != 0 ]
        then
          sed -i -e '/'"$check_line"'[ ]*$/d' ../META-INF/com/google/android/update-script
        fi
      done

      echo
    fi

    if [ "`grep "symlink dumpstate" ../META-INF/com/google/android/update-script`" == "" ] && [ -e bin/dumpstate ]
    then

      if [ ! -e bin/bugreport ]
      then
        echo "正在添加 bugreport 符号链接 ..."
        sed -i -e 's/copy_dir PACKAGE:system SYSTEM:/copy_dir PACKAGE:system SYSTEM:\nsymlink dumpstate SYSTEM:bin\/bugreport\n/' ../META-INF/com/google/android/update-script 
      fi

      if [ ! -e bin/dumpcrash ]
      then
      echo "正在添加 dumpcrash 符号链接 ..."
        sed -i -e 's/copy_dir PACKAGE:system SYSTEM:/copy_dir PACKAGE:system SYSTEM:\nsymlink dumpstate SYSTEM:bin\/dumpcrash\n/' ../META-INF/com/google/android/update-script 
      fi
    fi


  #
  # Check if symlinks found in ROM
  #

  elif [ "$symlinks" != "" ]
  then

    echo -n "它们将会添加到 update-script 刷机脚本并从 system/bin 中移除"

    for (( i=0 ; i < ${#symlinks[@]} ; i++ ))
    do

      echo -n "华为饭网huaweifan.com"

      link=${symlinks[$i]}
      src=${source_files[$i]}

      # Deleting the symbolic link
      rm -f bin/$link

      #
      #  Remove full paths for some binaries
      #
      if [ `echo $src | grep -c /busybox$` == 1 ]
      then
        src=busybox
      elif [ `echo $src | grep -c /toolbox$` == 1 ]
      then
        src=toolbox
      elif [ `echo $src | grep -c /dumpstate$` == 1 ]
      then
        src=dumpstate
      elif [ `echo $src | grep -c /iwmulticall$` == 1 ]
      then
        src=iwmulticall
      fi

      export LINK=$link
      export SRC=$src

      perl -pi -e 's/set_perm_recursive 0 0 0755 0644 SYSTEM:[ ]*$/symlink $ENV{"SRC"} SYSTEM:bin\/$ENV{"LINK"}\nset_perm_recursive 0 0 0755 0644 SYSTEM:/' ../META-INF/com/google/android/update-script 
    done

    echo

  else
    echo "在 ROM 中没有发现符号链接在 update-script 脚本中"
  fi

  cd ..



  #
  # Modify the update-script if certain files are missing under /system
  #

  if [ ! -e system/bin/ip ] 
  then
    perl -pi -e 's/set_perm 0 3003 06755 SYSTEM:bin\/ip\n//g' META-INF/com/google/android/update-script
  fi

  if [ ! -d system/etc/ppp ] 
  then
    perl -pi -e 's/set_perm_recursive 0 0 0755 0555 SYSTEM:etc\/ppp[ ]*\n//g' META-INF/com/google/android/update-script
  fi

  if [ -d system/etc/bluetooth ]
  then
   perl -pi -e 's/set_perm_recursive 1002 1002 0755 0440 SYSTEM:etc\/bluez\n//g' META-INF/com/google/android/update-script
   perl -pi -e 's/set_perm 0 0 0755 SYSTEM:etc\/bluez\n//g' META-INF/com/google/android/update-script
   
  else
    perl -pi -e 's/set_perm_recursive 1002 1002 0755 0440 SYSTEM:etc\/bluetooth\n//g' META-INF/com/google/android/update-script
    perl -pi -e 's/set_perm 0 0 0755 SYSTEM:etc\/bluetooth\n//g' META-INF/com/google/android/update-script
    perl -pi -e 's/set_perm 1000 1000 0640 SYSTEM:etc\/bluetooth\/auto_pairing.conf\n//g' META-INF/com/google/android/update-script
    perl -pi -e 's/set_perm 3002 3002 0444 SYSTEM:etc\/bluetooth\/blacklist.conf\n//g' META-INF/com/google/android/update-script

  fi

  if [ ! -e system/bin/run-as ]
  then
    perl -pi -e 's/set_perm 0 2000 06750 SYSTEM:bin\/run-as\n//g' META-INF/com/google/android/update-script
  fi

  if [ ! -d system/vendor ]
  then
    perl -pi -e 's/set_perm_recursive 0 2000 0755 0644 SYSTEM:vendor[ ]*$//g' META-INF/com/google/android/update-script
  fi

  if [ ! -d system/vendor/firmware ]
  then
    perl -pi -e 's/set_perm_recursive 0 0 0755 0644 SYSTEM:vendor\/firmware[ ]*$//g' META-INF/com/google/android/update-script
    perl -pi -e 's/set_perm 0 2000 0755 SYSTEM:vendor\/firmware[ ]*$//g' META-INF/com/google/android/update-script    
  fi

  if [ ! -d system/vendor/bin ]
  then
    perl -pi -e 's/set_perm_recursive 0 2000 0755 0755 SYSTEM:vendor\/bin[ ]*$//g' META-INF/com/google/android/update-script
  fi 

  if [ ! -d system/vendor/etc ]
  then
    perl -pi -e 's/set_perm_recursive 0 2000 0755 0644 SYSTEM:vendor\/etc[ ]*$//g' META-INF/com/google/android/update-script
  fi 

  if [ ! -d system/vendor/lib ]
  then
    perl -pi -e 's/set_perm 0 2000 0755 SYSTEM:vendor\/lib[ ]*$//g' META-INF/com/google/android/update-script    
  fi

  if [ ! -d system/vendor/lib/egl ]
  then
    perl -pi -e 's/set_perm 0 2000 0755 SYSTEM:vendor\/lib\/egl[ ]*$//g' META-INF/com/google/android/update-script    
  fi

  if [ ! -d system/vendor/lib/hw ]
  then
    perl -pi -e 's/set_perm 0 2000 0755 SYSTEM:vendor\/lib\/hw[ ]*$//g' META-INF/com/google/android/update-script    
  fi

  if [ ! -e system/vendor/etc/gps.xml ]
  then
    perl -pi -e 's/set_perm 0 0 0644 SYSTEM:vendor\/etc\/gps.xml//g' META-INF/com/google/android/update-script    
  fi



  if [ ! -d system/xbin ]
  then
    perl -pi -e 's/set_perm_recursive 0 2000 0755 0755 SYSTEM:xbin[ ]*$//g' META-INF/com/google/android/update-script
  fi


  if [ ! -e system/etc/install-recovery.sh ]
  then
    perl -pi -e 's/set_perm 0 0 0544 SYSTEM:etc\/install-recovery.sh\n//g' META-INF/com/google/android/update-script
  fi

  cd ..
  scripts/fix_update_script_blanks


else
  cd ..
fi  

